syntax = "proto3";
package protocol;

import "core/Tron.proto";
import "core/Contract.proto";

option java_package = "org.tron.api"; //Specify the name of the package that generated the Java file
option java_outer_classname = "GrpcAPI"; //Specify the class name of the generated Java file
option go_package = "github.com/tronprotocol/grpc-gateway/api";

service Wallet {

  rpc GetAccount (Account) returns (Account) {

  };

  rpc CreateTransaction (TransferContract) returns (Transaction) {

  };

  rpc BroadcastTransaction (Transaction) returns (Return) {

  };

  rpc ListAccounts (EmptyMessage) returns (AccountList) {

  };

  rpc UpdateAccount (AccountUpdateContract) returns (Transaction) {

  };

  rpc CreateAccount (AccountCreateContract) returns (Transaction) {

  };

  rpc VoteWitnessAccount (VoteWitnessContract) returns (Transaction) {

  };

  rpc CreateAssetIssue (AssetIssueContract) returns (Transaction) {

  };

  rpc ListWitnesses (EmptyMessage) returns (WitnessList) {

  };

  rpc UpdateWitness (WitnessUpdateContract) returns (Transaction) {

  };

  rpc CreateWitness (WitnessCreateContract) returns (Transaction) {

  };

  rpc TransferAsset (TransferAssetContract) returns (Transaction) {

  }

  rpc ParticipateAssetIssue (ParticipateAssetIssueContract) returns (Transaction) {

  }

  rpc ListNodes (EmptyMessage) returns (NodeList) {

  }
  rpc GetAssetIssueList (EmptyMessage) returns (AssetIssueList) {

  }
  rpc GetAssetIssueByAccount (Account) returns (AssetIssueList) {

  }
  rpc GetAssetIssueByName (BytesMessage) returns (AssetIssueContract) {

  }
  rpc GetNowBlock (EmptyMessage) returns (Block) {

  }
  rpc GetBlockByNum (NumberMessage) returns (Block) {

  }
  rpc TotalTransaction (EmptyMessage) returns (NumberMessage) {

  }
};

// the api of tron's db
service Database {
  // for tapos
  rpc getBlockReference (EmptyMessage) returns (BlockReference) {

  }
  rpc GetDynamicProperties (EmptyMessage) returns (DynamicProperties) {

  }
  rpc GetNowBlock (EmptyMessage) returns (Block) {

  }
  rpc GetBlockByNum (NumberMessage) returns (Block) {

  }
};

message Return {
  enum response_code {
    SUCCESS = 0;
    SIGERROR = 1; // error in signature
    CONTRACT_VALIDATE_ERROR = 2;
    CONTRACT_EXE_ERROR = 3;
    BANDWITH_ERROR = 4;
    DUP_TRANSACTION_ERROR = 5;
    TAPOS_ERROR = 6;
    TOO_BIG_TRANSACTION_ERROR = 7;
    OTHER_ERROR = 20;
  }

  bool result = 1;
  response_code code = 2;
  bytes message = 3;
}

message BlockReference {
  int64 block_num = 1;
  bytes block_hash = 2;
}

// the api of tron's network such as node list.
service Network {

};



message AccountList {
  repeated Account accounts = 1;
}

message WitnessList {
  repeated Witness witnesses = 1;
}

message AssetIssueList {
  repeated AssetIssueContract assetIssue = 1;
}
message BlockList {
  repeated Block block = 1;
}
message TransactionList {
  repeated Transaction transaction = 1;
}

// Gossip node list
message NodeList {
  repeated Node nodes = 1;
}

// Gossip node
message Node {
  Address address = 1;
}

// Gossip node address
message Address {
  bytes host = 1;
  int32 port = 2;
}

message EmptyMessage {
}
message NumberMessage {
  int64 num = 1;
}
message BytesMessage {
  bytes value = 1;
}
message TimeMessage {
  int64 beginInMilliseconds = 1;
  int64 endInMilliseconds = 2;
}
message BlockLimit {
  int64 startNum = 1;
  int64 endNum = 2;
}
message TransactionLimit {
  bytes transactionId = 1;
  int64 limitNum = 2;
}